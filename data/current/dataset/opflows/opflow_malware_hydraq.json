[
  {
    "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
    "platform": "linux|macos|windows|network",
    "tid": "T1005",
    "technique": "Data from Local System",
    "tactic": "collection",
    "datasources": "command-execution|file-access|os-api-execution|process-creation|script-execution",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
    "technique_references": [
      {
        "source_name": "show_run_config_cmd_cisco",
        "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/show_protocols_through_showmon.html#wp2760878733",
        "description": "Cisco. (2022, August 16). show running-config - Cisco IOS Configuration Fundamentals Command Reference . Retrieved July 13, 2022.",
        "external_id": "none"
      },
      {
        "source_name": "Mandiant APT41 Global Intrusion ",
        "url": "https://www.mandiant.com/resources/apt41-initiates-global-intrusion-campaign-using-multiple-exploits",
        "description": "Gyler, C.,Perez D.,Jones, S.,Miller, S.. (2021, February 25). This is Not a Test: APT41 Initiates Global Intrusion Campaign Using Multiple Exploits. Retrieved February 17, 2022.",
        "external_id": "none"
      },
      {
        "source_name": "US-CERT-TA18-106A",
        "url": "https://www.us-cert.gov/ncas/alerts/TA18-106A",
        "description": "US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa",
    "platform": "windows|macos|linux",
    "tid": "T1007",
    "technique": "System Service Discovery",
    "tactic": "discovery",
    "datasources": "command-execution|os-api-execution|process-creation",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
    "technique_references": [],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896",
    "platform": "windows",
    "tid": "T1012",
    "technique": "Query Registry",
    "tactic": "discovery",
    "datasources": "command-execution|os-api-execution|process-creation|windows-registry-key-access",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
    "technique_references": [
      {
        "source_name": "Wikipedia Windows Registry",
        "url": "https://en.wikipedia.org/wiki/Windows_Registry",
        "description": "Wikipedia. (n.d.). Windows Registry. Retrieved February 2, 2015.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
    "platform": "linux|macos|windows|network",
    "tid": "T1016",
    "technique": "System Network Configuration Discovery",
    "tactic": "discovery",
    "datasources": "command-execution|os-api-execution|process-creation|script-execution",
    "has_subtechniques": true,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [
      "T1016.001"
    ],
    "count_subtechniques": 1,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion )\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
    "technique_references": [
      {
        "source_name": "Mandiant APT41 Global Intrusion ",
        "url": "https://www.mandiant.com/resources/apt41-initiates-global-intrusion-campaign-using-multiple-exploits",
        "description": "Gyler, C.,Perez D.,Jones, S.,Miller, S.. (2021, February 25). This is Not a Test: APT41 Initiates Global Intrusion Campaign Using Multiple Exploits. Retrieved February 17, 2022.",
        "external_id": "none"
      },
      {
        "source_name": "US-CERT-TA18-106A",
        "url": "https://www.us-cert.gov/ncas/alerts/TA18-106A",
        "description": "US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
    "platform": "linux|macos|windows",
    "tid": "T1027",
    "technique": "Obfuscated Files or Information",
    "tactic": "defense-evasion",
    "datasources": "command-execution|file-creation|file-metadata|module-load|os-api-execution|process-creation|script-execution|windows-registry-key-creation|wmi-creation",
    "has_subtechniques": true,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [
      "T1027.001",
      "T1027.002",
      "T1027.003",
      "T1027.004",
      "T1027.005",
      "T1027.006",
      "T1027.007",
      "T1027.008",
      "T1027.009",
      "T1027.010",
      "T1027.011"
    ],
    "count_subtechniques": 11,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
    "technique_references": [
      {
        "source_name": "Volexity PowerDuke November 2016",
        "url": "https://www.volexity.com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/",
        "description": "Adair, S.. (2016, November 9). PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs. Retrieved January 11, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "GitHub Revoke-Obfuscation",
        "url": "https://github.com/danielbohannon/Revoke-Obfuscation",
        "description": "Bohannon, D. (2017, July 27). Revoke-Obfuscation. Retrieved February 12, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "FireEye Obfuscation June 2017",
        "url": "https://web.archive.org/web/20170923102302/https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html",
        "description": "Bohannon, D. & Carr N. (2017, June 30). Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques. Retrieved February 12, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "FireEye Revoke-Obfuscation July 2017",
        "url": "https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/revoke-obfuscation-report.pdf",
        "description": "Bohannon, D. & Holmes, L. (2017, July 27). Revoke-Obfuscation: PowerShell Obfuscation Detection Using Science. Retrieved February 12, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "GitHub Office-Crackros Aug 2016",
        "url": "https://github.com/itsreallynick/office-crackros",
        "description": "Carr, N. (2016, August 14). OfficeCrackros. Retrieved February 12, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Linux/Cdorked.A We Live Security Analysis",
        "url": "https://www.welivesecurity.com/2013/04/26/linuxcdorked-new-apache-backdoor-in-the-wild-serves-blackhole/",
        "description": "Pierre-Marc Bureau. (2013, April 26). Linux/Cdorked.A: New Apache backdoor being used in the wild to serve Blackhole. Retrieved September 10, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Carbon Black Obfuscation Sept 2016",
        "url": "https://www.carbonblack.com/2016/09/23/security-advisory-variants-well-known-adware-families-discovered-include-sophisticated-obfuscation-techniques-previously-associated-nation-state-attacks/",
        "description": "Tedesco, B. (2016, September 23). Security Alert Summary. Retrieved February 12, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "PaloAlto EncodedCommand March 2017",
        "url": "https://researchcenter.paloaltonetworks.com/2017/03/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/",
        "description": "White, J. (2017, March 10). Pulling Back the Curtains on EncodedCommand PowerShell Attacks. Retrieved February 12, 2018.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
    "platform": "linux|macos|windows|office-365|saas|iaas|google-workspace|network",
    "tid": "T1048",
    "technique": "Exfiltration Over Alternative Protocol",
    "tactic": "exfiltration",
    "datasources": "application-log-content|cloud-storage-access|command-execution|file-access|network-connection-creation|network-traffic-content|network-traffic-flow",
    "has_subtechniques": true,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [
      "T1048.001",
      "T1048.002",
      "T1048.003"
    ],
    "count_subtechniques": 3,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).",
    "technique_references": [
      {
        "source_name": "University of Birmingham C2",
        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "Palo Alto OilRig Oct 2016",
        "url": "http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/",
        "description": "Grunzweig, J. and Falcone, R.. (2016, October 4). OilRig Malware Campaign Updates Toolset and Expands Targets. Retrieved May 3, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "20 macOS Common Tools and Techniques",
        "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
        "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
    "platform": "linux|macos|windows|network",
    "tid": "T1057",
    "technique": "Process Discovery",
    "tactic": "discovery",
    "datasources": "command-execution|os-api-execution|process-creation",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
    "technique_references": [
      {
        "source_name": "show_processes_cisco_cmd",
        "url": "https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/fundamentals/command/cf_command_ref/show_monitor_permit_list_through_show_process_memory.html#wp3599497760",
        "description": "Cisco. (2022, August 16). show processes - . Retrieved July 13, 2022.",
        "external_id": "none"
      },
      {
        "source_name": "US-CERT-TA18-106A",
        "url": "https://www.us-cert.gov/ncas/alerts/TA18-106A",
        "description": "US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
    "platform": "windows",
    "tid": "T1070.001",
    "technique": "Clear Windows Event Logs",
    "tactic": "defense-evasion",
    "datasources": "command-execution|file-deletion|os-api-execution",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging. Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)",
    "technique_references": [
      {
        "source_name": "disable_win_evt_logging",
        "url": "https://ptylu.github.io/content/report/report.html?report=25",
        "description": "Heiligenstein, L. (n.d.). REP-25: Disable Windows Event Logging. Retrieved April 7, 2022.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft Clear-EventLog",
        "url": "https://docs.microsoft.com/powershell/module/microsoft.powershell.management/clear-eventlog",
        "description": "Microsoft. (n.d.). Clear-EventLog. Retrieved July 2, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft EventLog.Clear",
        "url": "https://msdn.microsoft.com/library/system.diagnostics.eventlog.clear.aspx",
        "description": "Microsoft. (n.d.). EventLog.Clear Method (). Retrieved July 2, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft wevtutil Oct 2017",
        "url": "https://docs.microsoft.com/windows-server/administration/windows-commands/wevtutil",
        "description": "Plett, C. et al.. (2017, October 16). wevtutil. Retrieved July 2, 2018.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
    "platform": "linux|macos|windows",
    "tid": "T1070.004",
    "technique": "File Deletion",
    "tactic": "defense-evasion",
    "datasources": "command-execution|file-deletion",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.",
    "technique_references": [
      {
        "source_name": "Microsoft SDelete July 2016",
        "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/sdelete",
        "description": "Russinovich, M. (2016, July 4). SDelete v2.0. Retrieved February 8, 2018.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
    "platform": "windows|iaas|linux|macos|network",
    "tid": "T1082",
    "technique": "System Information Discovery",
    "tactic": "discovery",
    "datasources": "command-execution|os-api-execution|process-creation",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) [System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)",
    "technique_references": [
      {
        "source_name": "Amazon Describe Instance",
        "url": "https://docs.aws.amazon.com/cli/latest/reference/ssm/describe-instance-information.html",
        "description": "Amazon. (n.d.). describe-instance-information. Retrieved March 3, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "Google Instances Resource",
        "url": "https://cloud.google.com/compute/docs/reference/rest/v1/instances",
        "description": "Google. (n.d.). Rest Resource: instance. Retrieved March 3, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft Virutal Machine API",
        "url": "https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/get",
        "description": "Microsoft. (2019, March 1). Virtual Machines - Get. Retrieved October 8, 2019.",
        "external_id": "none"
      },
      {
        "source_name": "20 macOS Common Tools and Techniques",
        "url": "https://labs.sentinelone.com/20-common-tools-techniques-used-by-macos-threat-actors-malware/",
        "description": "Phil Stokes. (2021, February 16). 20 Common Tools & Techniques Used by macOS Threat Actors & Malware. Retrieved August 23, 2021.",
        "external_id": "none"
      },
      {
        "source_name": "OSX.FairyTale",
        "url": "https://www.sentinelone.com/blog/trail-osx-fairytale-adware-playing-malware/",
        "description": "Phile Stokes. (2018, September 20). On the Trail of OSX.FairyTale | Adware Playing at Malware. Retrieved August 24, 2021.",
        "external_id": "none"
      },
      {
        "source_name": "US-CERT-TA18-106A",
        "url": "https://www.us-cert.gov/ncas/alerts/TA18-106A",
        "description": "US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
    "platform": "linux|macos|windows|network",
    "tid": "T1083",
    "technique": "File and Directory Discovery",
    "tactic": "discovery",
    "datasources": "command-execution|os-api-execution|process-creation",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)",
    "technique_references": [
      {
        "source_name": "Windows Commands JPCERT",
        "url": "https://blogs.jpcert.or.jp/en/2016/01/windows-commands-abused-by-attackers.html",
        "description": "Tomonaga, S. (2016, January 26). Windows Commands Abused by Attackers. Retrieved February 2, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "US-CERT-TA18-106A",
        "url": "https://www.us-cert.gov/ncas/alerts/TA18-106A",
        "description": "US-CERT. (2018, April 20). Alert (TA18-106A) Russian State-Sponsored Cyber Actors Targeting Network Infrastructure Devices. Retrieved October 19, 2020.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
    "platform": "linux|macos|windows",
    "tid": "T1105",
    "technique": "Ingress Tool Transfer",
    "tactic": "command-and-control",
    "datasources": "file-creation|network-connection-creation|network-traffic-content|network-traffic-flow",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)\n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)",
    "technique_references": [
      {
        "source_name": "University of Birmingham C2",
        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "t1105_lolbas",
        "url": "https://lolbas-project.github.io/#t1105",
        "description": "LOLBAS. (n.d.). LOLBAS Mapped to T1105. Retrieved March 11, 2022.",
        "external_id": "none"
      },
      {
        "source_name": "PTSecurity Cobalt Dec 2016",
        "url": "https://www.ptsecurity.com/upload/corporate/ww-en/analytics/Cobalt-Snatch-eng.pdf",
        "description": "Positive Technologies. (2016, December 16). Cobalt Snatch. Retrieved October 9, 2018.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
    "platform": "windows",
    "tid": "T1112",
    "technique": "Modify Registry",
    "tactic": "defense-evasion",
    "datasources": "command-execution|os-api-execution|process-creation|windows-registry-key-creation|windows-registry-key-deletion|windows-registry-key-modification",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.",
    "technique_references": [
      {
        "source_name": "Microsoft Reg",
        "url": "https://technet.microsoft.com/en-us/library/cc732643.aspx",
        "description": "Microsoft. (2012, April 17). Reg. Retrieved May 1, 2015.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft Remote",
        "url": "https://technet.microsoft.com/en-us/library/cc754820.aspx",
        "description": "Microsoft. (n.d.). Enable the Remote Registry Service. Retrieved May 1, 2015.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft 4657 APR 2017",
        "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4657",
        "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4657(S): A registry value was modified. Retrieved August 9, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "SpectorOps Hiding Reg Jul 2017",
        "url": "https://posts.specterops.io/hiding-registry-keys-with-psreflect-b18ec5ac8353",
        "description": "Reitz, B. (2017, July 14). Hiding Registry keys with PSReflect. Retrieved August 9, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft Reghide NOV 2006",
        "url": "https://docs.microsoft.com/sysinternals/downloads/reghide",
        "description": "Russinovich, M. & Sharkey, K. (2006, January 10). Reghide. Retrieved August 9, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft RegDelNull July 2016",
        "url": "https://docs.microsoft.com/en-us/sysinternals/downloads/regdelnull",
        "description": "Russinovich, M. & Sharkey, K. (2016, July 4). RegDelNull v1.11. Retrieved August 10, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "TrendMicro POWELIKS AUG 2014",
        "url": "https://blog.trendmicro.com/trendlabs-security-intelligence/poweliks-malware-hides-in-windows-registry/",
        "description": "Santos, R. (2014, August 1). POWELIKS: Malware Hides In Windows Registry. Retrieved August 9, 2018.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
    "platform": "linux|macos|windows",
    "tid": "T1113",
    "technique": "Screen Capture",
    "tactic": "collection",
    "datasources": "command-execution|os-api-execution",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n",
    "technique_references": [
      {
        "source_name": "CopyFromScreen .NET",
        "url": "https://docs.microsoft.com/en-us/dotnet/api/system.drawing.graphics.copyfromscreen?view=netframework-4.8",
        "description": "Microsoft. (n.d.). Graphics.CopyFromScreen Method. Retrieved March 24, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "Antiquated Mac Malware",
        "url": "https://blog.malwarebytes.com/threat-analysis/2017/01/new-mac-backdoor-using-antiquated-code/",
        "description": "Thomas Reed. (2017, January 18). New Mac backdoor using antiquated code. Retrieved July 5, 2017.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65",
    "platform": "windows",
    "tid": "T1129",
    "technique": "Shared Modules",
    "tactic": "execution",
    "datasources": "module-load|os-api-execution",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may execute malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like <code>CreateProcess</code>, <code>LoadLibrary</code>, etc. of the Win32 API.(Citation: Wikipedia Windows Library Files)\n\nThe module loader can load DLLs:\n\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n* via <code>&#x3c;file name=\"filename.extension\" loadFrom=\"fully-qualified or relative pathname\"&#x3e;</code> in an embedded or external \"application manifest\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, malware may execute share modules to load additional components or features.",
    "technique_references": [
      {
        "source_name": "Wikipedia Windows Library Files",
        "url": "https://en.wikipedia.org/wiki/Microsoft_Windows_library_files",
        "description": "Wikipedia. (2017, January 31). Microsoft Windows library files. Retrieved February 13, 2017.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
    "platform": "windows",
    "tid": "T1134",
    "technique": "Access Token Manipulation",
    "tactic": "defense-evasion",
    "datasources": "active-directory-object-modification|command-execution|os-api-execution|process-creation|process-metadata|user-account-metadata",
    "has_subtechniques": true,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [
      "T1134.001",
      "T1134.002",
      "T1134.003",
      "T1134.004",
      "T1134.005"
    ],
    "count_subtechniques": 5,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
    "technique_references": [
      {
        "source_name": "BlackHat Atkinson Winchester Token Manipulation",
        "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf",
        "description": "Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft Command-line Logging",
        "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing",
        "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft LogonUser",
        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx",
        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft DuplicateTokenEx",
        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx",
        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft ImpersonateLoggedOnUser",
        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx",
        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Pentestlab Token Manipulation",
        "url": "https://pentestlab.blog/2017/04/03/token-manipulation/",
        "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "user|administrator",
    "technique_effective_permissions": "system",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
    "platform": "windows",
    "tid": "T1134",
    "technique": "Access Token Manipulation",
    "tactic": "privilege-escalation",
    "datasources": "active-directory-object-modification|command-execution|os-api-execution|process-creation|process-metadata|user-account-metadata",
    "has_subtechniques": true,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [
      "T1134.001",
      "T1134.002",
      "T1134.003",
      "T1134.004",
      "T1134.005"
    ],
    "count_subtechniques": 5,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
    "technique_references": [
      {
        "source_name": "BlackHat Atkinson Winchester Token Manipulation",
        "url": "https://www.blackhat.com/docs/eu-17/materials/eu-17-Atkinson-A-Process-Is-No-One-Hunting-For-Token-Manipulation.pdf",
        "description": "Atkinson, J., Winchester, R. (2017, December 7). A Process is No One: Hunting for Token Manipulation. Retrieved December 21, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft Command-line Logging",
        "url": "https://technet.microsoft.com/en-us/windows-server-docs/identity/ad-ds/manage/component-updates/command-line-process-auditing",
        "description": "Mathers, B. (2017, March 7). Command line process auditing. Retrieved April 21, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft LogonUser",
        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378184(v=vs.85).aspx",
        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft DuplicateTokenEx",
        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa446617(v=vs.85).aspx",
        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft ImpersonateLoggedOnUser",
        "url": "https://msdn.microsoft.com/en-us/library/windows/desktop/aa378612(v=vs.85).aspx",
        "description": "Microsoft TechNet. (n.d.). Retrieved April 25, 2017.",
        "external_id": "none"
      },
      {
        "source_name": "Pentestlab Token Manipulation",
        "url": "https://pentestlab.blog/2017/04/03/token-manipulation/",
        "description": "netbiosX. (2017, April 3). Token Manipulation. Retrieved April 21, 2017.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "user|administrator",
    "technique_effective_permissions": "system",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
    "platform": "windows",
    "tid": "T1543.003",
    "technique": "Windows Service",
    "tactic": "persistence",
    "datasources": "command-execution|driver-load|os-api-execution|process-creation|service-creation|service-modification|windows-registry-key-creation|windows-registry-key-modification",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
    "technique_references": [
      {
        "source_name": "Microsoft Windows Event Forwarding FEB 2018",
        "url": "https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection",
        "description": "Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "ESET InvisiMole June 2020",
        "url": "https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf",
        "description": "Hromcova, Z. and Cherpanov, A. (2020, June). INVISIMOLE: THE HIDDEN PART OF THE STORY. Retrieved July 16, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "TechNet Services",
        "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx",
        "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft 4697 APR 2017",
        "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697",
        "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Symantec W.32 Stuxnet Dossier",
        "url": "https://www.wired.com/images_blogs/threatlevel/2010/11/w32_stuxnet_dossier.pdf",
        "description": "Nicolas Falliere, Liam O. Murchu, Eric Chien. (2011, February). W32.Stuxnet Dossier. Retrieved December 7, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "Unit42 AcidBox June 2020",
        "url": "https://unit42.paloaltonetworks.com/acidbox-rare-malware/",
        "description": "Reichel, D. and Idrizovic, E. (2020, June 17). AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations. Retrieved March 16, 2021.",
        "external_id": "none"
      },
      {
        "source_name": "TechNet Autoruns",
        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "Crowdstrike DriveSlayer February 2022",
        "url": "https://www.crowdstrike.com/blog/how-crowdstrike-falcon-protects-against-wiper-malware-used-in-ukraine-attacks/",
        "description": "Thomas, W. et al. (2022, February 25). CrowdStrike Falcon Protects from New Wiper Malware Used in Ukraine Cyberattacks. Retrieved March 25, 2022.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "administrator|system",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
    "platform": "windows",
    "tid": "T1543.003",
    "technique": "Windows Service",
    "tactic": "privilege-escalation",
    "datasources": "command-execution|driver-load|os-api-execution|process-creation|service-creation|service-modification|windows-registry-key-creation|windows-registry-key-modification",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component).",
    "technique_references": [
      {
        "source_name": "Microsoft Windows Event Forwarding FEB 2018",
        "url": "https://docs.microsoft.com/windows/security/threat-protection/use-windows-event-forwarding-to-assist-in-intrusion-detection",
        "description": "Hardy, T. & Hall, J. (2018, February 15). Use Windows Event Forwarding to help with intrusion detection. Retrieved August 7, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "ESET InvisiMole June 2020",
        "url": "https://www.welivesecurity.com/wp-content/uploads/2020/06/ESET_InvisiMole.pdf",
        "description": "Hromcova, Z. and Cherpanov, A. (2020, June). INVISIMOLE: THE HIDDEN PART OF THE STORY. Retrieved July 16, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "TechNet Services",
        "url": "https://technet.microsoft.com/en-us/library/cc772408.aspx",
        "description": "Microsoft. (n.d.). Services. Retrieved June 7, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "Microsoft 4697 APR 2017",
        "url": "https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4697",
        "description": "Miroshnikov, A. & Hall, J. (2017, April 18). 4697(S): A service was installed in the system. Retrieved August 7, 2018.",
        "external_id": "none"
      },
      {
        "source_name": "Symantec W.32 Stuxnet Dossier",
        "url": "https://www.wired.com/images_blogs/threatlevel/2010/11/w32_stuxnet_dossier.pdf",
        "description": "Nicolas Falliere, Liam O. Murchu, Eric Chien. (2011, February). W32.Stuxnet Dossier. Retrieved December 7, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "Unit42 AcidBox June 2020",
        "url": "https://unit42.paloaltonetworks.com/acidbox-rare-malware/",
        "description": "Reichel, D. and Idrizovic, E. (2020, June 17). AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations. Retrieved March 16, 2021.",
        "external_id": "none"
      },
      {
        "source_name": "TechNet Autoruns",
        "url": "https://technet.microsoft.com/en-us/sysinternals/bb963902",
        "description": "Russinovich, M. (2016, January 4). Autoruns for Windows v13.51. Retrieved June 6, 2016.",
        "external_id": "none"
      },
      {
        "source_name": "Crowdstrike DriveSlayer February 2022",
        "url": "https://www.crowdstrike.com/blog/how-crowdstrike-falcon-protects-against-wiper-malware-used-in-ukraine-attacks/",
        "description": "Thomas, W. et al. (2022, February 25). CrowdStrike Falcon Protects from New Wiper Malware Used in Ukraine Cyberattacks. Retrieved March 25, 2022.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "administrator|system",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
    "platform": "windows",
    "tid": "T1569.002",
    "technique": "Service Execution",
    "tactic": "execution",
    "datasources": "command-execution|process-creation|service-creation|windows-registry-key-modification",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",
    "technique_references": [
      {
        "source_name": "Microsoft Service Control Manager",
        "url": "https://docs.microsoft.com/windows/win32/services/service-control-manager",
        "description": "Microsoft. (2018, May 31). Service Control Manager. Retrieved March 28, 2020.",
        "external_id": "none"
      },
      {
        "source_name": "Russinovich Sysinternals",
        "url": "https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx",
        "description": "Russinovich, M. (2014, May 2). Windows Sysinternals PsExec v2.11. Retrieved May 13, 2015.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "administrator|system",
    "technique_effective_permissions": "none",
    "search_token": "none"
  },
  {
    "id": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41",
    "platform": "linux|windows|macos",
    "tid": "T1573.001",
    "technique": "Symmetric Cryptography",
    "tactic": "command-and-control",
    "datasources": "network-traffic-content",
    "has_subtechniques": false,
    "is_deprecated": false,
    "is_revoked": false,
    "subtechniques": [],
    "count_subtechniques": 0,
    "correlation_adversary": "none",
    "correlation_malware": "hydraq",
    "correlation_tool": "none",
    "correlation_gid": "none",
    "technique_description": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
    "technique_references": [
      {
        "source_name": "University of Birmingham C2",
        "url": "https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf",
        "description": "Gardiner, J.,  Cova, M., Nagaraja, S. (2014, February). Command & Control Understanding, Denying and Detecting. Retrieved April 20, 2016.",
        "external_id": "none"
      }
    ],
    "technique_required_permissions": "none",
    "technique_effective_permissions": "none",
    "search_token": "none"
  }
]
